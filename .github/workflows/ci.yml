name: Haskell CI

on:
  push:
    branches:
      - main

jobs:
  install_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GHC with Stack
        uses: haskell/actions/setup@v1
        with:
          stack-version: 'latest'

      - name: Install dependencies
        run: stack build --only-dependencies

      - name: Build project
        run: stack build

      - name: Run tests
        run: stack test || true

      - name: Generate coverage report
        run: stack test --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: test/coverage/

      - name: Install HLint
        run: stack install hlint

      - name: Run HLint
        run: hlint src/ app/ test/

  push_to_mirror:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Debug SSH setup
        run: ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      - name: Mirror repository excluding .github/workflows and hidden refs
        env:
          MIRROR_URL: ${{ secrets.MIRROR_URL }}
        run: |
          set -x
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

          TEMP_DIR=$(mktemp -d)
          echo "Temporary directory: $TEMP_DIR"

          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)

          git clone --mirror git@github.com:$GITHUB_REPOSITORY.git $TEMP_DIR

          cd $TEMP_DIR

          git rm -r --cached .github/workflows || true
          git commit -m "Remove .github/workflows directory" || true

          git for-each-ref --format 'delete %(refname)' refs/pull | git update-ref --stdin
          git push --mirror --force $MIRROR_URL || true

          cd ..
          rm -rf $TEMP_DIR
